name: Pull Request

on:
  pull_request:
    branches: [main]

  workflow_dispatch:

env:
  PROJECT_NAME: ApiClient

jobs:
  cancel-previous-runs:
    runs-on: ubuntu-latest

    steps:
      - name: Cancel previous runs of this workflow on same branch
        uses: rokroskar/workflow-run-cleanup-action@v0.2.2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  tests:
    runs-on: [self-hosted, macOS, arm64, MacStadium]

    steps:
      - uses: actions/checkout@v2

      - name: Resolve Package Dependencies
        run: arch -arm64 xcodebuild -resolvePackageDependencies

      - name: Build & Run Tests
        run: arch -arm64 xcodebuild test -scheme $PROJECT_NAME -destination 'platform=iOS Simulator,name=iPhone 12,OS=latest'

  code-coverage-report:
    runs-on: [self-hosted, macOS, arm64, MacStadium]
    needs: [tests]

    strategy:
      matrix:
        device:
          - iPhone 12

    steps:
      - uses: actions/checkout@v2

      - name: Setup testSecrets.json
        run: |
         echo '
         {
         "signInSecretKey": "${{ secrets.IOS_API_V3_SECRET_KEY}}",
         "comparableSecretKey": "${{ secrets.IOS_API_V3_COMPARABLE_KEY}}",
         "testKey": "${{ secrets.IOS_API_V3_TEST_KEY}}",
         "primeNumber": ${{ secrets.IOS_API_V3_PRIME_NUMBER}}
         }
         ' >> Tests/ApiClientTests/TestSecrets/testSecrets.json

      - name: Resolve Package Dependencies
        run: arch -arm64 xcodebuild -resolvePackageDependencies

      - name: Build & Run Tests
        run: arch -arm64 xcodebuild test -scheme ${{ env.PROJECT_NAME }} -destination 'platform=iOS Simulator,name=iPhone 12,OS=latest' -enableCodeCoverage YES -derivedDataPath .build

      - uses: michaelhenry/swifty-code-coverage@v1.0.0
        with:
          build-path: .build
          target: ${{ env.PROJECT_NAME }}Tests.xctest
          is-spm: true
          output: "coverage/lcov.info"
          output-artifact-name: "codeclimate-artifact"

      - name: Publish to code climate
        uses: paambaati/codeclimate-action@v3.0.0
        env:
          CC_TEST_REPORTER_ID: ${{ secrets.IOS_API_CLIENT_CC_TEST_REPORT_ID }}
        with:
          coverageLocations: |
            coverage/lcov.info:lcov

  # test-terminal-app:
  #   runs-on: [self-hosted, macOS, arm64, MacStadium]
  #
  #   steps:
  #     - uses: actions/checkout@v2
  #
  #     - name: Run Tests
  #       run: "./TestTerminal.sh"
  #
  # notify-slack-success:
  #   runs-on: ubuntu-latest
  #   needs: [linters, tests, test-terminal-app]
  #   if: success()
  #
  #   steps:
  #     - name: Report Success to Slack
  #       uses: voxmedia/github-action-slack-notify-build@v1
  #       with:
  #         channel: ci-ios
  #         status: SUCCESS
  #         color: good
  #       env:
  #         SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}
  #
  # notify-slack-fail-early:
  #   runs-on: ubuntu-latest
  #   needs: [linters]
  #   if: failure()
  #
  #   steps:
  #     - name: Report Failure to Slack
  #       uses: voxmedia/github-action-slack-notify-build@v1
  #       with:
  #         channel: ci-ios
  #         status: FAILURE
  #         color: danger
  #       env:
  #         SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}
  #
  #     - name: Cancel current workflow
  #       uses: andymckay/cancel-action@0.2
  #
  # notify-slack-failure:
  #   runs-on: ubuntu-latest
  #   needs: [linters, tests, test-terminal-app]
  #   if: failure()
  #
  #   steps:
  #     - name: Report Failure to Slack
  #       uses: voxmedia/github-action-slack-notify-build@v1
  #       with:
  #         channel: ci-ios
  #         status: FAILURE
  #         color: danger
  #       env:
  #         SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}
